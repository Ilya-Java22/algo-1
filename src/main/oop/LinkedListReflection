В отличие от эталонного решения у меня:

1. Для запросов is_head() и is_tail() введено предусловие "список не пустой", так как запрос вернет одинаковое значение
    false и если список пустой, и если список не пуст && курсор не на крайних узлах, а мне показалось, что надо бы эти
    состояния различать для однозначности интерпретации "отрицательного" результата работы метода, что может быть важно
    в дальнейшей работе программы/юзера.

2. Для команды right() у меня два предусловия: "список не пустой" и "курсор не установлен на последний узел в списке".
    В эталонном - одно: "правее курсора есть элемент". Но ведь чтобы понять, есть ли правее курсора элемент, надо, чтобы
    курсор на что-то указывал, на опорную точку, от которой мы "смотрим вправо", а когда список пуст, курсор никуда не
    указывает... Дополнительно, опять же хотелось однозначности интерпретации "отрицательного" результата работы метода
    (либо список пуст, либо непуст, но справа нет элементов)

3. С методом find(T value) та же история, у меня есть предусловие "список не пустой". Метод ничего не возвращает, так что
    хотелось бы знать, что по итогу произошло (ничего, если список пуст; курсор на нужном узле; курсор на хвосте, если ничего
    не найдено).
    В эталонном решении кстати у Вас три статуса этого метода:
          "
          public int get_find_status(); // следующий найден;
                               // следующий не найден; список пуст
          "
    Не значит ли это, что нужно предусловие "список не пустой"?...